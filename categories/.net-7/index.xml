<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>.NET 7 on Ankit Sarkar | .NET Enthusiast | Azure Cloud Practitioner</title>
    <link>https://anktsrkr.github.io/categories/.net-7/</link>
    <description>Recent content in .NET 7 on Ankit Sarkar | .NET Enthusiast | Azure Cloud Practitioner</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 12 Jan 2023 06:00:35 +0100</lastBuildDate>
    
	<atom:link href="https://anktsrkr.github.io/categories/.net-7/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Getting started with testing for Azure Blob Storage : Dependency Injection</title>
      <link>https://anktsrkr.github.io/post/getting-started-with-testing-for-azure-blob-storage-dependency-injection/</link>
      <pubDate>Thu, 12 Jan 2023 06:00:35 +0100</pubDate>
      
      <guid>https://anktsrkr.github.io/post/getting-started-with-testing-for-azure-blob-storage-dependency-injection/</guid>
      <description>With this post, I am starting a new series about how to perform unit and integration tests for Azure Blob Storage using Azurite Test Containers, Moq and xUnit. Over the time, I will updated this page with links to individual posts :
This Post - Getting started with testing for Azure Blob Storage : Dependency Injection
Getting started with testing for Azure Blob Storage : Unit Test with help of Moq</description>
    </item>
    
    <item>
      <title>Step-up authentication with Auth0 in .NET 7</title>
      <link>https://anktsrkr.github.io/post/step-up-authentication-with-auth0-in-.net-7/</link>
      <pubDate>Tue, 20 Sep 2022 11:08:35 +0100</pubDate>
      
      <guid>https://anktsrkr.github.io/post/step-up-authentication-with-auth0-in-.net-7/</guid>
      <description>Security is the ❤️ of any application but sometimes we need to balance security with usability. Sometimes you want to allow users to access a resource with a lower level of authentication by just entering username and password. But if the user wants to access a resource with a higher level of authentication, then you want to ask the user to enter a second factor of authentication.
For instance, if you are building a money transfer application, you want to allow users to view transaction history or adding a new beneficiary with just a username and password.</description>
    </item>
    
  </channel>
</rss>