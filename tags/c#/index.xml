<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>c# on Ankit Sarkar | .NET Enthusiast | Azure Cloud Practitioner</title>
    <link>https://anktsrkr.github.io/tags/c#/</link>
    <description>Recent content in c# on Ankit Sarkar | .NET Enthusiast | Azure Cloud Practitioner</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 26 Dec 2023 06:00:35 +0000</lastBuildDate>
    <atom:link href="https://anktsrkr.github.io/tags/c#/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Re-Authorize Efficiently Using Polly And .NET HttpClientFactory in .NET 8</title>
      <link>https://anktsrkr.github.io/post/re-authorize-efficiently-using-polly-and-httpclientfactory-in-.net8/</link>
      <pubDate>Tue, 26 Dec 2023 06:00:35 +0000</pubDate>
      <guid>https://anktsrkr.github.io/post/re-authorize-efficiently-using-polly-and-httpclientfactory-in-.net8/</guid>
      <description>Hi Everyone!&#xA;This is continuation of the series of posts on Polly v8 and .NET 8.&#xA;In this series of posts, I will try to cover some of the new features of Polly v8 and .NET 8. Below are the topics I am planning to cover in this series :&#xA;Implementing Retry Strategy for HttpClientFactory using Polly(v8) and .NET 8&#xA;This Post - Re-Authorize Efficiently Using Polly And .NET HttpClientFactory in .</description>
    </item>
    <item>
      <title>Implementing Retry Strategy using HttpClientFactory with Polly(v8) and .NET 8</title>
      <link>https://anktsrkr.github.io/post/implementing-retry-strategy-using-httpclientfactory-with-pollyv8-and-.net-8/</link>
      <pubDate>Tue, 31 Oct 2023 06:00:35 +0100</pubDate>
      <guid>https://anktsrkr.github.io/post/implementing-retry-strategy-using-httpclientfactory-with-pollyv8-and-.net-8/</guid>
      <description>Hi Everyone!&#xA;As we all aware, Polly v8 is released sometime back and so is .NET 8, it is ready for Production use 🥳.&#xA;In this series of posts, I will try to cover some of the new features of Polly v8 and .NET 8. Below are the topics I am planning to cover in this series :&#xA;This Post - Implementing Retry Strategy for HttpClientFactory using Polly(v8) and .NET 8</description>
    </item>
    <item>
      <title>Getting started with testing for Azure Blob Storage : Mocking Azure Blob/File Storage SDK Using FakeItEasy</title>
      <link>https://anktsrkr.github.io/post/getting-started-with-testing-for-azure-blob-storage-mocking-blob-storage-sdk-fakeiteasy/</link>
      <pubDate>Wed, 11 Oct 2023 08:30:35 +0100</pubDate>
      <guid>https://anktsrkr.github.io/post/getting-started-with-testing-for-azure-blob-storage-mocking-blob-storage-sdk-fakeiteasy/</guid>
      <description>Hi Everyone!&#xA;As you are aware I have decided to move away from MOQ and insted we will use FakeItEasy for mocking the Azure Storage SDK. This post is adoptation of this which is using Moq.&#xA;You can find the full series of how to perform unit and integration tests for Azure Blob Storage using Azurite Test Containers, and xUnit.&#xA;Getting started with testing for Azure Blob Storage : Dependency Injection</description>
    </item>
    <item>
      <title>Getting started with testing for Azure Blob Storage : Unit Test with help of FakeItEasy</title>
      <link>https://anktsrkr.github.io/post/getting-started-with-testing-for-azure-blob-storage-unit-test-fakeiteasy/</link>
      <pubDate>Wed, 11 Oct 2023 08:00:35 +0100</pubDate>
      <guid>https://anktsrkr.github.io/post/getting-started-with-testing-for-azure-blob-storage-unit-test-fakeiteasy/</guid>
      <description>Hi Everyone!&#xA;In this post, we will discuss about the alternative framework for mocking. This post is adoptation of this which is using Moq.&#xA;You can find the full series of how to perform unit and integration tests for Azure Blob Storage using Azurite Test Containers, and xUnit.&#xA;Getting started with testing for Azure Blob Storage : Dependency Injection&#xA;Getting started with testing for Azure Blob Storage : Unit Test with help of Moq</description>
    </item>
    <item>
      <title>Do not throw exceptions...Everywhere</title>
      <link>https://anktsrkr.github.io/post/do-not-throw-exceptions...everywhere/</link>
      <pubDate>Sun, 08 Oct 2023 08:00:35 +0100</pubDate>
      <guid>https://anktsrkr.github.io/post/do-not-throw-exceptions...everywhere/</guid>
      <description>We, as C# developers, are used to throwing exceptions everywhere be it a functional such as validation or technical such as network failure. But is it worth throwing exceptions everywhere? Exceptions are expensive. You should not throw exceptions everywhere. You should throw exceptions only when it is necessary. But how? Let&amp;rsquo;s discuss the alternative approach.&#xA;Types of exceptions in general Excellent article by Eric Lippert on exceptions, where you can find the types of exceptions in general.</description>
    </item>
    <item>
      <title>Use IHttpClientFactory and Polly(v8) to implement resilient HTTP requests</title>
      <link>https://anktsrkr.github.io/post/use-httpclientfactory-with-pollyv8-to-implement-resilient-http-requests/</link>
      <pubDate>Mon, 02 Oct 2023 06:00:35 +0100</pubDate>
      <guid>https://anktsrkr.github.io/post/use-httpclientfactory-with-pollyv8-to-implement-resilient-http-requests/</guid>
      <description>Recently, Polly team did fabulous job 🎉 by releasing the new version 8.0.0. It has lot of improvements and also they re-implemented Policy as Strategy. Polly v8 introduces the concept of resilience pipelines, a powerful tool that put together one or more resilience strategies.Here is the all changes you can find.&#xA;The Problem Microsoft provides a extension Microsoft.Extensions.Http.Polly which allows us to use Polly with HttpClientFactory. It is very easy to use and you can find the documentation here.</description>
    </item>
    <item>
      <title>Re-Authorize Efficiently Using Polly And .NET HttpClientFactory</title>
      <link>https://anktsrkr.github.io/post/re-authorize-efficiently-using-polly-and-httpclientfactory/</link>
      <pubDate>Thu, 25 May 2023 06:00:35 +0100</pubDate>
      <guid>https://anktsrkr.github.io/post/re-authorize-efficiently-using-polly-and-httpclientfactory/</guid>
      <description>In today&amp;rsquo;s world, we are using a lot of APIs to build our applications. To make your .NET based applications more ressilient and fault tolerant, go to solution is to use Polly. Probably, you are already using it. So,I&amp;rsquo;m not going to explain how to use it in general. You can find some excellent documentation here.&#xA;However, In this post I&amp;rsquo;m going to discuss about one of the typical scenario where we need to refresh the authentication token when using Polly.</description>
    </item>
    <item>
      <title>Download Files From Azure Blob Storage Efficiently Using RecyclableMemoryStream</title>
      <link>https://anktsrkr.github.io/post/download-files-from-azure-blob-storage-efficiently-using-recyclablememorystream/</link>
      <pubDate>Wed, 24 May 2023 06:00:35 +0100</pubDate>
      <guid>https://anktsrkr.github.io/post/download-files-from-azure-blob-storage-efficiently-using-recyclablememorystream/</guid>
      <description>Recently, I was working on a project where we had to download multiple large files from Azure Blob Storage and process it further. When the application hits the production environment and started getting the actual files, we observed that memory consumption is getting very high. On top of that, the application was hosted in shared windows based app service plan, which was making it even worse for other applications too.</description>
    </item>
    <item>
      <title>Getting started with testing for Azure Blob Storage : Mocking Azure Blob/File Storage SDK</title>
      <link>https://anktsrkr.github.io/post/getting-started-with-testing-for-azure-blob-storage-mocking-blob-storage-sdk/</link>
      <pubDate>Wed, 17 May 2023 06:00:35 +0100</pubDate>
      <guid>https://anktsrkr.github.io/post/getting-started-with-testing-for-azure-blob-storage-mocking-blob-storage-sdk/</guid>
      <description>Hi Everyone!&#xA;This post is continuation of how to perform unit and integration tests for Azure Blob Storage using Azurite Test Containers, Moq and xUnit. Over the time, I will updated this page with links to individual posts :&#xA;Getting started with testing for Azure Blob Storage : Dependency Injection&#xA;Getting started with testing for Azure Blob Storage : Unit Test with help of Moq&#xA;Getting started with testing for Azure Blob Storage : Unit Test with help of FakeItEasy (Alternative to MoQ)</description>
    </item>
    <item>
      <title>Getting started with testing for Azure Blob Storage : Integration Test with help of TestContainers and Azurite</title>
      <link>https://anktsrkr.github.io/post/getting-started-with-testing-for-azure-blob-storage-integration-test-testcontainers-azurite/</link>
      <pubDate>Wed, 18 Jan 2023 06:00:35 +0100</pubDate>
      <guid>https://anktsrkr.github.io/post/getting-started-with-testing-for-azure-blob-storage-integration-test-testcontainers-azurite/</guid>
      <description>Hi Everyone!&#xA;This post is continuation of how to perform unit and integration tests for Azure Blob Storage using Azurite Test Containers, Moq and xUnit. Over the time, I will updated this page with links to individual posts :&#xA;Getting started with testing for Azure Blob Storage : Dependency Injection&#xA;Getting started with testing for Azure Blob Storage : Unit Test with help of Moq&#xA;Getting started with testing for Azure Blob Storage : Unit Test with help of FakeItEasy (Alternative to MoQ)</description>
    </item>
    <item>
      <title>Getting started with testing for Azure Blob Storage : Unit Test with help of Moq</title>
      <link>https://anktsrkr.github.io/post/getting-started-with-testing-for-azure-blob-storage-unit-test-moq/</link>
      <pubDate>Mon, 16 Jan 2023 09:00:35 +0100</pubDate>
      <guid>https://anktsrkr.github.io/post/getting-started-with-testing-for-azure-blob-storage-unit-test-moq/</guid>
      <description>Hi Everyone!&#xA;This post is continuation of how to perform unit and integration tests for Azure Blob Storage using Azurite Test Containers, Moq and xUnit. Over the time, I will updated this page with links to individual posts :&#xA;Getting started with testing for Azure Blob Storage : Dependency Injection&#xA;This Post - Getting started with testing for Azure Blob Storage : Unit Test with help of Moq&#xA;Getting started with testing for Azure Blob Storage : Unit Test with help of FakeItEasy (Alternative to MoQ)</description>
    </item>
    <item>
      <title>Getting started with testing for Azure Blob Storage : Dependency Injection</title>
      <link>https://anktsrkr.github.io/post/getting-started-with-testing-for-azure-blob-storage-dependency-injection/</link>
      <pubDate>Thu, 12 Jan 2023 06:00:35 +0100</pubDate>
      <guid>https://anktsrkr.github.io/post/getting-started-with-testing-for-azure-blob-storage-dependency-injection/</guid>
      <description>With this post, I am starting a new series about how to perform unit and integration tests for Azure Blob Storage using Azurite Test Containers, Moq and xUnit. Over the time, I will updated this page with links to individual posts :&#xA;This Post - Getting started with testing for Azure Blob Storage : Dependency Injection&#xA;Getting started with testing for Azure Blob Storage : Unit Test with help of Moq</description>
    </item>
    <item>
      <title>Step-up authentication with Auth0 in .NET 7</title>
      <link>https://anktsrkr.github.io/post/step-up-authentication-with-auth0-in-.net-7/</link>
      <pubDate>Tue, 20 Sep 2022 11:08:35 +0100</pubDate>
      <guid>https://anktsrkr.github.io/post/step-up-authentication-with-auth0-in-.net-7/</guid>
      <description>Security is the ❤️ of any application but sometimes we need to balance security with usability. Sometimes you want to allow users to access a resource with a lower level of authentication by just entering username and password. But if the user wants to access a resource with a higher level of authentication, then you want to ask the user to enter a second factor of authentication.&#xA;For instance, if you are building a money transfer application, you want to allow users to view transaction history or adding a new beneficiary with just a username and password.</description>
    </item>
    <item>
      <title>Manage your Package Release using Nuke in Github</title>
      <link>https://anktsrkr.github.io/post/manage-your-package-release-using-nuke-in-github/</link>
      <pubDate>Mon, 05 Sep 2022 11:08:35 +0100</pubDate>
      <guid>https://anktsrkr.github.io/post/manage-your-package-release-using-nuke-in-github/</guid>
      <description>Hi Everyone!&#xA;This post is continuation of the series about a build automation tool called Nuke . Over the time, I will updated this page with links to individual posts :&#xA;Getting Started with Nuke&#xA;Write your first building block in Nuke&#xA;Manage your Package Version using Nuke&#xA;This Post - Manage your Package Release using Nuke in Github&#xA;In our last post, we ran the build successfully in our local machine.</description>
    </item>
    <item>
      <title>Manage your Package Version using Nuke</title>
      <link>https://anktsrkr.github.io/post/manage-your-package-version-using-nuke/</link>
      <pubDate>Sat, 03 Sep 2022 11:08:35 +0100</pubDate>
      <guid>https://anktsrkr.github.io/post/manage-your-package-version-using-nuke/</guid>
      <description>Hi Everyone!&#xA;This post is continuation of the series about a build automation tool called Nuke . Over the time, I will updated this page with links to individual posts :&#xA;Getting Started with Nuke&#xA;Write your first building block in Nuke&#xA;This Post - Manage your Package Version using Nuke&#xA;Manage your Package Release using Nuke in Github&#xA;In our last post, we have completed all the steps to create a new package and publish it to the feed based on where we are running the build.</description>
    </item>
    <item>
      <title>Write your first building block in Nuke</title>
      <link>https://anktsrkr.github.io/post/write-your-first-building-block-in-nuke/</link>
      <pubDate>Tue, 30 Aug 2022 11:08:35 +0100</pubDate>
      <guid>https://anktsrkr.github.io/post/write-your-first-building-block-in-nuke/</guid>
      <description>Hi Everyone!&#xA;This post is continuation of the series about a build automation tool called Nuke . Over the time, I will updated this page with links to individual posts :&#xA;Getting Started with Nuke&#xA;This Post - Write your first building block in Nuke&#xA;Manage your Package Version using Nuke&#xA;Manage your Package Release using Nuke in Github&#xA;In our last post, we have created a new build project using Nuke.</description>
    </item>
    <item>
      <title>Getting Started with Nuke</title>
      <link>https://anktsrkr.github.io/post/getting-started-with-nuke/</link>
      <pubDate>Sun, 28 Aug 2022 11:07:35 +0100</pubDate>
      <guid>https://anktsrkr.github.io/post/getting-started-with-nuke/</guid>
      <description>Hi Everyone!&#xA;With this post, I am starting a new series about a build automation tool called Nuke . Over the time, I will updated this page with links to individual posts :&#xA;This Post - Getting Started with Nuke&#xA;Write your first building block in Nuke&#xA;Manage your Package Version using Nuke&#xA;Manage your Package Release using Nuke in Github&#xA;Table of Contents What we are going to build? What is Nuke?</description>
    </item>
  </channel>
</rss>
